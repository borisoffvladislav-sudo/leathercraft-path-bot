# routers/start.py
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, FSInputFile
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from database.models import Database
from routers.tutorial import get_showcase_keyboard
from routers.tutorial import (
    get_tutorial_start_keyboard, 
    get_approach_keyboard,
    get_oldman_approach_keyboard, 
    get_shop_menu_keyboard,
    TutorialStates, 
    
)
import os
import asyncio 

start_router = Router()
db = Database()

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)
MESSAGE_DELAY = 0.5

async def delayed_send(bot, chat_id, method, *args, **kwargs):
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π"""
    await asyncio.sleep(MESSAGE_DELAY)
    return await getattr(bot, method)(chat_id, *args, **kwargs)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
class RegistrationStates(StatesGroup):
    waiting_for_name = State()
    waiting_for_gender = State()  # ‚Üê –î–û–ë–ê–í–õ–ï–ù–û —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞
    choosing_class = State()
    confirming_class = State()
    final_confirmation = State()

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞–º–∏
class PlayerManagementStates(StatesGroup):
    confirming_deletion = State()
    viewing_profile = State()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def get_registration_keyboard():
    from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üé≠ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏ —Å–æ–∑–¥–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞", callback_data="start_registration")]
    ])
    return keyboard

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞–º–∏
def get_existing_players_keyboard():
    from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚ñ∂Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏–≥—Ä–∞—Ç—å", callback_data="continue_playing")],
        [InlineKeyboardButton(text="‚ûï –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ", callback_data="create_new_character")],
        [InlineKeyboardButton(text="üë§ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞", callback_data="view_profile")]
    ])
    return keyboard

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞ 
def get_gender_keyboard():
    from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üë® –ú—É–∂—Å–∫–æ–π", callback_data="gender_male")],
        [InlineKeyboardButton(text="üë© –ñ–µ–Ω—Å–∫–∏–π", callback_data="gender_female")]
    ])
    return keyboard

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–ª–∞—Å—Å–∞
def get_classes_keyboard():
    from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üõ†Ô∏è –†–∞–±–æ—Ç—è–≥–∞", callback_data="class_worker")],
        [InlineKeyboardButton(text="üíº –ú–µ–Ω–µ–¥–∂–µ—Ä", callback_data="class_manager")],
        [InlineKeyboardButton(text="üì± –ë–ª–æ–≥–≥–µ—Ä", callback_data="class_blogger")]
    ])
    return keyboard

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞ –∫–ª–∞—Å—Å–∞
def get_class_confirmation_keyboard():
    from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –í—ã–±—Ä–∞—Ç—å —ç—Ç–æ—Ç –∫–ª–∞—Å—Å", callback_data="confirm_class")],
        [InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É", callback_data="back_to_classes")]
    ])
    return keyboard

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
def get_final_confirmation_keyboard():
    from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –î–∞, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é –≤—ã–±–æ—Ä", callback_data="final_confirm")],
        [InlineKeyboardButton(text="‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫–ª–∞—Å—Å–∞–º", callback_data="back_to_class_info")]
    ])
    return keyboard

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è
def get_deletion_confirmation_keyboard():
    from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üóëÔ∏è –î–∞, —É–¥–∞–ª–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞", callback_data="confirm_deletion")],
        [InlineKeyboardButton(text="‚Ü©Ô∏è –ù–µ—Ç, –æ—Å—Ç–∞–≤–∏—Ç—å", callback_data="cancel_deletion")]
    ])
    return keyboard

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –§–ò–ù–ê–õ–¨–ù–û–ì–û –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è
def get_final_deletion_keyboard():
    from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å –Ω–∞–≤—Å–µ–≥–¥–∞", callback_data="final_confirm_deletion")],
        [InlineKeyboardButton(text="‚Ü©Ô∏è –ù–µ—Ç, —è –ø–µ—Ä–µ–¥—É–º–∞–ª", callback_data="cancel_final_deletion")]
    ])
    return keyboard

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
def get_profile_management_keyboard():
    from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚ñ∂Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏–≥—Ä–∞—Ç—å", callback_data="continue_playing")],
        [InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞", callback_data="delete_character")]
    ])
    return keyboard

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é –∏–≥—Ä—ã
def get_main_menu_keyboard():
    from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üõ†Ô∏è –†–∞–±–æ—Ç–∞", callback_data="work_menu")],
        [InlineKeyboardButton(text="üìã –ó–∞–∫–∞–∑—ã", callback_data="orders_menu")],
        [InlineKeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å", callback_data="view_profile")],
        [InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings")]
    ])
    return keyboard

@start_router.message(Command("start"))
async def start_command(message: Message):
    user_id = message.from_user.id
    username = message.from_user.username
    first_name = message.from_user.first_name
    
    # –î–æ–±–∞–≤–ª—è–µ–º/–ø–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    db.add_user(user_id, username, first_name, message.from_user.last_name)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏
    active_players = db.get_user_players(user_id)
    
    # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É
    image_path = "images/welcome.jpg"
    if not os.path.exists(image_path):
        image_path = "images/placeholder.jpg"
    
    try:
        photo = FSInputFile(image_path)
        if active_players:
            # –£–∂–µ –µ—Å—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∏ - –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±–æ—Ä
            await message.answer_photo(
                photo=photo,
                caption=f"üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {first_name}!\n\n"
                       "–£ —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏. –ß—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å?",
                reply_markup=get_existing_players_keyboard()
            )
        else:
            # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
            await message.answer_photo(
                photo=photo,
                caption="üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ '–ü—É—Ç—å –∫–æ–∂–µ–≤–Ω–∏–∫–∞'!\n\n"
                       "–ó–¥–µ—Å—å —Ç—ã —Å–º–æ–∂–µ—à—å –æ—Å–≤–æ–∏—Ç—å —Ä–µ–º–µ—Å–ª–æ –∫–æ–∂–µ–≤–Ω–∏–∫–∞, "
                       "—Å–æ–∑–¥–∞–≤–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è –∏ —Å—Ç—Ä–æ–∏—Ç—å —Å–≤–æ—é –º–∞—Å—Ç–µ—Ä—Å–∫—É—é!\n\n"
                       "üéØ –î–ª—è –Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π —Å–≤–æ–µ–≥–æ –ø–µ—Ä–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞!",
                reply_markup=get_registration_keyboard()
            )
    except Exception as e:
        # –ï—Å–ª–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∞ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è, –≤—Å–µ —Ä–∞–≤–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
        if active_players:
            await message.answer(
                f"üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {first_name}!\n\n"
                "–£ —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏. –ß—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å?",
                reply_markup=get_existing_players_keyboard()
            )
        else:
            await message.answer(
                "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ '–ü—É—Ç—å –∫–æ–∂–µ–≤–Ω–∏–∫–∞'!\n\n"
                "üéØ –î–ª—è –Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π —Å–≤–æ–µ–≥–æ –ø–µ—Ä–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞!",
                reply_markup=get_registration_keyboard()
            )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è"
@start_router.callback_query(F.data == "start_registration")
async def start_registration(callback: CallbackQuery, state: FSMContext):
    # –£–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    await callback.message.edit_reply_markup(reply_markup=None)
    
    # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
    await asyncio.sleep(MESSAGE_DELAY)
    
    # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É
    image_path = "images/create_character.jpg"
    if not os.path.exists(image_path):
        image_path = "images/placeholder.jpg"
    
    try:
        photo = FSInputFile(image_path)
        await callback.message.answer_photo(
            photo=photo,
            caption="üé≠ –î–∞–≤–∞–π —Å–æ–∑–¥–∞–¥–∏–º —Ç–≤–æ–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞!\n\n"
                   "–ö–∞–∫ –∑–æ–≤—É—Ç —Ç–≤–æ–µ–≥–æ –±—É–¥—É—â–µ–≥–æ –∫–æ–∂–µ–≤–Ω–∏–∫–∞?\n"
                   "(–í—ã–±–µ—Ä–∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è –æ—Ç 2 –¥–æ 20 —Å–∏–º–≤–æ–ª–æ–≤)",
        )
    except Exception as e:
        await callback.message.answer(
            "üé≠ –î–∞–≤–∞–π —Å–æ–∑–¥–∞–¥–∏–º —Ç–≤–æ–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞!\n\n"
            "–ö–∞–∫ –∑–æ–≤—É—Ç —Ç–≤–æ–µ–≥–æ –±—É–¥—É—â–µ–≥–æ –∫–æ–∂–µ–≤–Ω–∏–∫–∞?\n"
            "(–í—ã–±–µ—Ä–∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è –æ—Ç 2 –¥–æ 20 —Å–∏–º–≤–æ–ª–æ–≤)",
        )
    
    await state.set_state(RegistrationStates.waiting_for_name)
    await callback.answer()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏
@start_router.message(RegistrationStates.waiting_for_name)
async def process_name(message: Message, state: FSMContext):
    name = message.text.strip()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –∏–º–µ–Ω–∏
    if len(name) < 2 or len(name) > 20:
        # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ–± –æ—à–∏–±–∫–µ
        await asyncio.sleep(MESSAGE_DELAY)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π –æ–± –æ—à–∏–±–∫–µ
        image_path = "images/error.jpg"
        if not os.path.exists(image_path):
            image_path = "images/placeholder.jpg"
        
        try:
            photo = FSInputFile(image_path)
            await message.answer_photo(
                photo=photo,
                caption="‚ùå –ò–º—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 2 –¥–æ 20 —Å–∏–º–≤–æ–ª–æ–≤. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑:"
            )
        except:
            await message.answer("‚ùå –ò–º—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 2 –¥–æ 20 —Å–∏–º–≤–æ–ª–æ–≤. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑:")
        return
    
    # –í–†–ï–ú–ï–ù–ù–û –£–ë–ò–†–ê–ï–ú –ü–†–û–í–ï–†–ö–£ –£–ù–ò–ö–ê–õ–¨–ù–û–°–¢–ò –ò–ú–ï–ù–ò
    # TODO: –î–æ–±–∞–≤–∏—Ç—å –º–µ—Ç–æ–¥ is_player_name_taken –≤ Database
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data(character_name=name)
    
    # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –≤—ã–±–æ—Ä–æ–º –ø–æ–ª–∞
    await asyncio.sleep(MESSAGE_DELAY)
    
    # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞ ‚Üê –ò–ó–ú–ï–ù–ï–ù–û: –±—ã–ª–æ –≤—ã–±–æ—Ä –∫–ª–∞—Å—Å–∞, —Å—Ç–∞–ª–æ –≤—ã–±–æ—Ä –ø–æ–ª–∞
    image_path = "images/gender_selection.jpg"
    if not os.path.exists(image_path):
        image_path = "images/placeholder.jpg"
    
    try:
        photo = FSInputFile(image_path)
        await message.answer_photo(
            photo=photo,
            caption="üéØ –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –ø–æ–ª –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:",
            reply_markup=get_gender_keyboard()
        )
    except Exception as e:
        await message.answer(
            "üéØ –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –ø–æ–ª –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:",
            reply_markup=get_gender_keyboard()
        )
    
    await state.set_state(RegistrationStates.waiting_for_gender)  # ‚Üê –ò–ó–ú–ï–ù–ï–ù–û: –±—ã–ª–æ choosing_class

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞
@start_router.callback_query(F.data.startswith("gender_"), RegistrationStates.waiting_for_gender)
async def process_gender(callback: CallbackQuery, state: FSMContext):
    gender = callback.data.split("_")[1]  # "male" –∏–ª–∏ "female"
    
    await state.update_data(player_gender=gender)
    
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º –ø–æ–ª–∞
    try:
        await callback.message.delete()
    except:
        pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å
    
    # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –≤—ã–±–æ—Ä–æ–º –∫–ª–∞—Å—Å–∞
    await asyncio.sleep(MESSAGE_DELAY)
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É –∫–ª–∞—Å—Å–∞ —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π
    image_path = "images/classes.jpg"
    if not os.path.exists(image_path):
        image_path = "images/placeholder.jpg"
    
    try:
        photo = FSInputFile(image_path)
        await callback.message.answer_photo(
            photo=photo,
            caption="üéØ –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –∫–ª–∞—Å—Å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:\n\n"
                   "üõ†Ô∏è **–†–∞–±–æ—Ç—è–≥–∞** - –º–∞—Å—Ç–µ—Ä –Ω–∞ –≤—Å–µ —Ä—É–∫–∏\n"
                   "üíº **–ú–µ–Ω–µ–¥–∂–µ—Ä** - —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º\n"
                   "üì± **–ë–ª–æ–≥–≥–µ—Ä** - —Ä–∞–∑–æ—Ä–∏–≤—à–∏–π—Å—è –∏–Ω—Ñ–ª—é–µ–Ω—Å–µ—Ä —Å —Ñ–∞–Ω–∞—Ç–∞–º–∏",
            reply_markup=get_classes_keyboard()
        )
    except Exception as e:
        await callback.message.answer(
            "üéØ –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –∫–ª–∞—Å—Å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:\n\n"
            "üõ†Ô∏è **–†–∞–±–æ—Ç—è–≥–∞** - –º–∞—Å—Ç–µ—Ä –Ω–∞ –≤—Å–µ —Ä—É–∫–∏\n"
            "üíº **–ú–µ–Ω–µ–¥–∂–µ—Ä** - —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º\n"
            "üì± **–ë–ª–æ–≥–≥–µ—Ä** - —Ä–∞–∑–æ—Ä–∏–≤—à–∏–π—Å—è –∏–Ω—Ñ–ª—é–µ–Ω—Å–µ—Ä —Å —Ñ–∞–Ω–∞—Ç–∞–º–∏",
            reply_markup=get_classes_keyboard()
        )
    
    await state.set_state(RegistrationStates.choosing_class)
    await callback.answer()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞—á–∞—Ç—å –∏–≥—Ä–∞—Ç—å" - –ü–ï–†–ï–ú–ï–©–ï–ù –ò–ó TUTORIAL.PY
@start_router.callback_query(F.data == "start_tutorial")
async def start_tutorial_handler(callback: CallbackQuery, state: FSMContext):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –æ–±—É—á–µ–Ω–∏–µ –¥–ª—è –Ω–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞"""
    user_id = callback.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    active_player = db.get_active_player(user_id)
    if not active_player:
        await callback.answer("‚ùå –û—à–∏–±–∫–∞: –ø–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    player_id = active_player[0]  # ID –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    player_name = active_player[2]  # –∏–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    player_class = active_player[3]  # –∫–ª–∞—Å—Å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è –¥–ª—è —ç—Ç–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    tutorial_db.init_tutorial_progress(player_id)
    tutorial_db.init_shop_items()
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏—é –ø–æ –∫–ª–∞—Å—Å—É
    if player_class == "–†–∞–±–æ—Ç—è–≥–∞":
        backstory = f"–í—ã –ø–æ–ª –∂–∏–∑–Ω–∏ —Ç—Ä—É–¥–∏—Ç–µ—Å—å –Ω–∞ –∑–∞–≤–æ–¥–µ. –†–∞–±–æ—Ç–∞ –Ω–µ –ª–µ–≥–∫–∞—è, –Ω–æ —á–µ—Å—Ç–Ω–∞—è. –ö–∞–∂–¥—ã–π –¥–µ–Ω—å, –∫–∞–∫ —á–∞—Å—ã, —Å 8:00 –¥–æ 17:00 –≤—ã —É —Å—Ç–∞–Ω–∫–∞. –ê –ø–æ—Å–ª–µ —Å–º–µ–Ω—ã –æ—Å—Ç–∞–µ—Ç—Å—è –≤—Ä–µ–º—è –Ω–∞ —Å–µ–±—è. –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–µ—Ä–∏–∞–ª, –ø–æ–≥—É–ª—è—Ç—å –ø–æ –≥–æ—Ä–æ–¥—É —Å —Å–µ–º—å–µ–π, –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è —Å –¥—Ä—É–∑—å—è–º–∏. –û–±—ã—á–Ω–∞—è —Å–ø–æ–∫–æ–π–Ω–∞—è –∂–∏–∑–Ω—å.\n\n–û–¥–Ω–∞–∂–¥—ã –≤–µ—á–µ—Ä–æ–º, –ª–∏—Å—Ç–∞—è –ª–µ–Ω—Ç—É YouTube, –≤—ã –Ω–∞—Ç–∫–Ω—É–ª–∏—Å—å –Ω–∞ –≤–∏–¥–µ–æ, –≥–¥–µ –º–∞—Å—Ç–µ—Ä –∏–∑ –∫—É—Å–∫–∞ –∫–æ–∂–∏ –¥–µ–ª–∞–ª —Ä–µ–º–µ—à–æ–∫, –∞ –ø–æ—Ç–æ–º –∫–æ—à–µ–ª–µ–∫, –∞ –ø–æ—Ç–æ–º —Å—É–º–∫—É. –¢–∞–∫ –ª–æ–≤–∫–æ –∏ –ø—Ä–æ—Å—Ç–æ. –í–∞–º –∑–∞—Ö–æ—Ç–µ–ª–æ—Å—å —Ç–æ–∂–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–¥–µ–ª–∞—Ç—å —Å–µ–±–µ —Ä–µ–º–µ–Ω—å. –ê –µ—Å–ª–∏ –ø–æ–ª—É—á–∏—Ç—Å—è, —Ç–æ –∏ —Å—É–º–∫—É.\n\n–í–∑—è–≤ —á–∞—Å—Ç—å –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–π, –≤—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—å –≤ –±–ª–∏–∂–∞–π—à–∏–π –º–∞–≥–∞–∑–∏–Ω, –≥–¥–µ –ø—Ä–æ–¥–∞–≤–∞–ª–∏ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—É—é –∫–æ–∂—É."
        image_name = "worker_backstory.jpg"
    
    elif player_class == "–ú–µ–Ω–µ–¥–∂–µ—Ä":
        backstory = f"–í—ã –±—ã–ª–∏ –æ–±—ã—á–Ω—ã–º –æ—Ñ–∏—Å–Ω—ã–º —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–º, —á—å–∏ –¥–Ω–∏ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –≤ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã—Ö —Å–æ–≤–µ—â–∞–Ω–∏—è—Ö –∏ —Ä–∞–±–æ—Ç–µ —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏. –í—ã —á—É–≤—Å—Ç–≤–æ–≤–∞–ª–∏, –∫–∞–∫ —Ç–æ–Ω–µ—Ç–µ –≤ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–π —Ä—É—Ç–∏–Ω–µ, –≥–¥–µ –≤–∞—à–∞ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–∞ –Ω–∏–∫–æ–º—É –Ω–µ –Ω—É–∂–Ω–∞, –∞ —Ä–µ–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞–±–æ—Ç—ã —Ä–∞–∑–º—ã—Ç—ã –∏ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã. –ú–∏—Ä, —Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ —Ü–∏—Ñ—Ä –∏ –æ—Ç—á–µ—Ç–æ–≤, –∫–∞–∑–∞–ª—Å—è –≤–∞–º –ø—É—Å—Ç—ã–º –∏ –ª–∏—à–µ–Ω–Ω—ã–º —Å–º—ã—Å–ª–∞.\n\n–î–ª—è –æ—Ç–¥—ã—Ö–∞ –≤—ã —Å–º–æ—Ç—Ä–µ–ª–∏ YouTube, –∏ –æ–¥–Ω–∞–∂–¥—ã –æ–Ω –ø–æ–¥—Å—É–Ω—É–ª –≤–∞–º –∫–∞–Ω–∞–ª –∫–æ–∂–µ–≤–Ω–∏–∫–∞. –õ–æ–≤–∫–æ –∏ –ø—Ä–æ—Å—Ç–æ –º–∞—Å—Ç–µ—Ä –¥–µ–ª–∞–ª —Ä–∞–∑–Ω—ã–µ –≤–µ—â–∏. –ò —á—Ç–æ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å, —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–≤–æ–∏—Ö —Ç—Ä—É–¥–æ–≤ –º–∞—Å—Ç–µ—Ä –º–æ–≥ –ø–æ–¥–µ—Ä–∂–∞—Ç—å –≤ —Ä—É–∫–∞—Ö, –∞ —á—Ç–æ –µ—â–µ –ª—É—á—à–µ ‚Äì –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∏–º –∫–∞–∂–¥—ã–π –¥–µ–Ω—å! –¢–æ–≥–¥–∞ –≤—ã —Ä–µ—à–∏–ª –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –∏ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ, —á—Ç–æ-—Ç–æ —Å–¥–µ–ª–∞—Ç—å —É —Å–µ–±—è –Ω–∞ –∫—É—Ö–Ω–µ.\n\n–í–∑—è–≤ —á–∞—Å—Ç—å –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–π, –≤—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—å –≤ –±–ª–∏–∂–∞–π—à–∏–π –º–∞–≥–∞–∑–∏–Ω, –≥–¥–µ –ø—Ä–æ–¥–∞–≤–∞–ª–∏ –∫–æ–∂—É."
        image_name = "manager_backstory.jpg"
    
    else:  # –ë–ª–æ–≥–≥–µ—Ä
        backstory = f"–í—ã –∫–æ–≥–¥–∞-—Ç–æ –±—ã–ª–∏ –∏–∑–≤–µ—Å—Ç–Ω—ã–º –±–ª–æ–≥–µ—Ä–æ–º —Å —Ç—ã—Å—è—á–∞–º–∏ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤, —Å—Ç—Ä–æ—è —Å–≤–æ—é –∂–∏–∑–Ω—å –Ω–∞ –ª–∞–π–∫–∞—Ö –∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –∞—É–¥–∏—Ç–æ—Ä–∏–∏. –û–¥–Ω–∞–∫–æ –Ω–µ—É–¥–∞—á–Ω–æ–µ –≤–ª–æ–∂–µ–Ω–∏–µ –≤ —Å—Ç–∞—Ä—Ç–∞–ø –æ–±–µ—Ä–Ω—É–ª—Å—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–º –∫—Ä–∞—Ö–æ–º –∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–æ–π –≤—Å–µ—Ö –≤–∞—à–∏—Ö —Å–æ—Ü—Å–µ—Ç–µ–π. –í –æ–¥–Ω–æ—á–∞—Å—å–µ –≤—ã –ø–æ—Ç–µ—Ä—è–ª–∏ –≤—Å—ë, —á—Ç–æ —Å—á–∏—Ç–∞–ª–∏ —Å–≤–æ–µ–π –∂–∏–∑–Ω—å—é, –æ—Å–æ–∑–Ω–∞–≤ —à–∞—Ç–∫–æ—Å—Ç—å –º–∏—Ä–∞, –ø–æ—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ –Ω–∞ —á—É–∂–∏—Ö –æ—Ü–µ–Ω–∫–∞—Ö.\n\n–í –ø–æ–∏—Å–∫–∞—Ö –Ω–æ–≤–æ–≥–æ –ø—É—Ç–∏ –≤—ã –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏ –Ω–∞ YouTube —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –º–∞—Å—Ç–µ—Ä–æ–≤-—Ä–µ–º–µ—Å–ª–µ–Ω–Ω–∏–∫–æ–≤. –ò—Ö –∫—Ä–æ–ø–æ—Ç–ª–∏–≤–∞—è —Ä–∞–±–æ—Ç–∞ —Å –∫–æ–∂–µ–π, —Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞—Å—Å–Ω—ã—Ö –≤–µ—â–µ–π, –ø–æ—Ä–∞–∑–∏–ª–∞ –≤–∞—Å. –≠—Ç–æ –±—ã–ª —à–∞–Ω—Å –Ω–∞—á–∞—Ç—å –≤—Å—ë —Å —á–∏—Å—Ç–æ–≥–æ –ª–∏—Å—Ç–∞ –∏ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –Ω–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π, –∞ —Ä–µ–∞–ª—å–Ω—ã–π, –æ—Å—è–∑–∞–µ–º—ã–π –±–∏–∑–Ω–µ—Å.\n\n–í–∑—è–≤ —á–∞—Å—Ç—å –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–π, –≤—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—å –≤ –±–ª–∏–∂–∞–π—à–∏–π –º–∞–≥–∞–∑–∏–Ω, –≥–¥–µ –ø—Ä–æ–¥–∞–≤–∞–ª–∏ –∫–æ–∂—É."
        image_name = "blogger_backstory.jpg"
    
    # –£–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    try:
        await callback.message.edit_reply_markup(reply_markup=None)
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∫–Ω–æ–ø–∫–∏: {e}")
        # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∫–Ω–æ–ø–∫–∏
    
    # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É –ø—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏–∏
    image_path = f"images/tutorial/{image_name}"
    if not os.path.exists(image_path):
        image_path = "images/placeholder.jpg"
    
    try:
        photo = FSInputFile(image_path)
        await callback.message.answer_photo(
            photo=photo,
            caption=backstory,
            reply_markup=get_tutorial_start_keyboard()
        )
    except Exception as e:
        await callback.message.answer(
            backstory,
            reply_markup=get_tutorial_start_keyboard()
        )
    
    await state.set_state(TutorialStates.waiting_for_shop_enter)
    await state.update_data(player_id=player_id)
    await callback.answer()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–ª–∞—Å—Å–∞
@start_router.callback_query(F.data.startswith("class_"))
async def choose_class(callback: CallbackQuery, state: FSMContext):
    class_type = callback.data.replace("class_", "")
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ
    if class_type == "worker":
        class_name = "–†–∞–±–æ—Ç—è–≥–∞"
        description = "üõ†Ô∏è **–†–∞–±–æ—Ç—è–≥–∞** - –Ω–∞—Å—Ç–æ—è—â–∏–π –º–∞—Å—Ç–µ—Ä —Å–≤–æ–µ–≥–æ –¥–µ–ª–∞!\n\n"
        description += "üìä **–°—Ç–∞—Ä—Ç–æ–≤—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:**\n"
        description += "‚Ä¢ –ú–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ: 25 (–≤—ã—Å–æ–∫–æ–µ)\n"
        description += "‚Ä¢ –£–¥–∞—á–∞: 15 (—Å—Ä–µ–¥–Ω—è—è)\n" 
        description += "‚Ä¢ –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥: 5 (–Ω–∏–∑–∫–∏–π)\n"
        description += "‚Ä¢ –†–µ–ø—É—Ç–∞—Ü–∏—è: 5 (–Ω–∏–∑–∫–∞—è)\n\n"
        description += "–ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ –ª—é–±–∏—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Ä—É–∫–∞–º–∏!"
        image_name = "worker_class.jpg"
        
    elif class_type == "manager":
        class_name = "–ú–µ–Ω–µ–¥–∂–µ—Ä" 
        description = "üíº **–ú–µ–Ω–µ–¥–∂–µ—Ä** - –ø—Ä–∏—Ä–æ–∂–¥–µ–Ω–Ω—ã–π –ø—Ä–æ–¥–∞–≤–µ—Ü!\n\n"
        description += "üìä **–°—Ç–∞—Ä—Ç–æ–≤—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:**\n"
        description += "‚Ä¢ –ú–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ: 10 (–Ω–∏–∑–∫–æ–µ)\n"
        description += "‚Ä¢ –£–¥–∞—á–∞: 15 (—Å—Ä–µ–¥–Ω—è—è)\n"
        description += "‚Ä¢ –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥: 25 (–≤—ã—Å–æ–∫–∏–π)\n"
        description += "‚Ä¢ –†–µ–ø—É—Ç–∞—Ü–∏—è: 10 (–Ω–∏–∑–∫–∞—è)\n\n"
        description += "–û—Ç–ª–∏—á–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ç–æ—Ä–≥–æ–≤–ª–∏ –∏ –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–æ–≤!"
        image_name = "manager_class.jpg"
        
    else:  # blogger
        class_name = "–ë–ª–æ–≥–≥–µ—Ä"
        description = "üì± **–ë–ª–æ–≥–≥–µ—Ä** - —Ä–∞–∑–æ—Ä–∏–≤—à–∏–π—Å—è –∏–Ω—Ñ–ª—é–µ–Ω—Å–µ—Ä —Å —Ñ–∞–Ω–∞—Ç–∞–º–∏!\n\n"
        description += "üìä **–°—Ç–∞—Ä—Ç–æ–≤—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:**\n"
        description += "‚Ä¢ –ú–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ: 5 (–Ω–∏–∑–∫–æ–µ)\n"
        description += "‚Ä¢ –£–¥–∞—á–∞: 25 (–≤—ã—Å–æ–∫–∞—è)\n"
        description += "‚Ä¢ –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥: 20 (–≤—ã—Å–æ–∫–∏–π)\n"
        description += "‚Ä¢ –†–µ–ø—É—Ç–∞—Ü–∏—è: 20 (–≤—ã—Å–æ–∫–∞—è)\n\n"
        description += "–ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –≤—ã–±–æ—Ä –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±—Ä–µ–Ω–¥–∞!"
        image_name = "blogger_class.jpg"
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫–ª–∞—Å—Å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data(character_class=class_name, class_type=class_type)
    
    # –£–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    try:
        await callback.message.edit_reply_markup(reply_markup=None)
    except:
        pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –µ—Å–ª–∏ –Ω–µ –º–æ–∂–µ–º –∏–∑–º–µ–Ω–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
    
    # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –ø–æ–∫–∞–∑–æ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–ª–∞—Å—Å–µ
    await asyncio.sleep(MESSAGE_DELAY)
    
    # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É –∫–ª–∞—Å—Å–∞
    image_path = f"images/{image_name}"
    if not os.path.exists(image_path):
        image_path = "images/placeholder.jpg"
    
    try:
        photo = FSInputFile(image_path)
        await callback.message.answer_photo(
            photo=photo,
            caption=description,
            reply_markup=get_class_confirmation_keyboard()
        )
    except Exception as e:
        await callback.message.answer(
            description,
            reply_markup=get_class_confirmation_keyboard()
        )
    
    await state.set_state(RegistrationStates.confirming_class)
    await callback.answer()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –∫–ª–∞—Å—Å–æ–≤"
@start_router.callback_query(F.data == "back_to_classes")
async def back_to_classes(callback: CallbackQuery, state: FSMContext):
    # –£–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    try:
        await callback.message.edit_reply_markup(reply_markup=None)
    except:
        pass
    
    # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –≤–æ–∑–≤—Ä–∞—Ç–æ–º –∫ –≤—ã–±–æ—Ä—É
    await asyncio.sleep(MESSAGE_DELAY)
    
    # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É –≤—ã–±–æ—Ä–∞ –∫–ª–∞—Å—Å–∞
    image_path = "images/classes.jpg"
    if not os.path.exists(image_path):
        image_path = "images/placeholder.jpg"
    
    try:
        photo = FSInputFile(image_path)
        await callback.message.answer_photo(
            photo=photo,
            caption="üéØ –í—ã–±–µ—Ä–∏ –∫–ª–∞—Å—Å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:\n\n"
                   "üõ†Ô∏è **–†–∞–±–æ—Ç—è–≥–∞** - –º–∞—Å—Ç–µ—Ä –Ω–∞ –≤—Å–µ —Ä—É–∫–∏\n"
                   "üíº **–ú–µ–Ω–µ–¥–∂–µ—Ä** - —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º\n"
                   "üì± **–ë–ª–æ–≥–≥–µ—Ä** - —Ä–∞–∑–æ—Ä–∏–≤—à–∏–π—Å—è –∏–Ω—Ñ–ª—é–µ–Ω—Å–µ—Ä —Å —Ñ–∞–Ω–∞—Ç–∞–º–∏",
            reply_markup=get_classes_keyboard()
        )
    except Exception as e:
        await callback.message.answer(
            "üéØ –í—ã–±–µ—Ä–∏ –∫–ª–∞—Å—Å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:\n\n"
            "üõ†Ô∏è **–†–∞–±–æ—Ç—è–≥–∞** - –º–∞—Å—Ç–µ—Ä –Ω–∞ –≤—Å–µ —Ä—É–∫–∏\n"
            "üíº **–ú–µ–Ω–µ–¥–∂–µ—Ä** - —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º\n"
            "üì± **–ë–ª–æ–≥–≥–µ—Ä** - —Ä–∞–∑–æ—Ä–∏–≤—à–∏–π—Å—è –∏–Ω—Ñ–ª—é–µ–Ω—Å–µ—Ä —Å —Ñ–∞–Ω–∞—Ç–∞–º–∏",
            reply_markup=get_classes_keyboard()
        )
    
    await state.set_state(RegistrationStates.choosing_class)
    await callback.answer()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–í—ã–±—Ä–∞—Ç—å —ç—Ç–æ—Ç –∫–ª–∞—Å—Å" (–ø–µ—Ä–µ—Ö–æ–¥ –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é)
@start_router.callback_query(F.data == "confirm_class")
async def confirm_class_selection(callback: CallbackQuery, state: FSMContext):
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    character_name = data.get('character_name')
    character_class = data.get('character_class')
    
    # –£–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    try:
        await callback.message.edit_reply_markup(reply_markup=None)
    except:
        pass
    
    # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
    await asyncio.sleep(MESSAGE_DELAY)
    
    # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    image_path = "images/confirmation.jpg"
    if not os.path.exists(image_path):
        image_path = "images/placeholder.jpg"
    
    try:
        photo = FSInputFile(image_path)
        await callback.message.answer_photo(
            photo=photo,
            caption=f"üéØ **–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞**\n\n"
                   f"üìõ –ò–º—è: {character_name}\n"
                   f"üéØ –ö–ª–∞—Å—Å: {character_class}\n\n"
                   f"‚ùóÔ∏è –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–±—Ä–∞—Ç—å —ç—Ç–æ—Ç –∫–ª–∞—Å—Å?\n"
                   f"–ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–∑–º–µ–Ω–∏—Ç—å –∫–ª–∞—Å—Å –±—É–¥–µ—Ç –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ!",
            reply_markup=get_final_confirmation_keyboard()
        )
    except Exception as e:
        await callback.message.answer(
            f"üéØ **–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞**\n\n"
            f"üìõ –ò–º—è: {character_name}\n"
            f"üéØ –ö–ª–∞—Å—Å: {character_class}\n\n"
            f"‚ùóÔ∏è –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–±—Ä–∞—Ç—å —ç—Ç–æ—Ç –∫–ª–∞—Å—Å?\n"
            f"–ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–∑–º–µ–Ω–∏—Ç—å –∫–ª–∞—Å—Å –±—É–¥–µ—Ç –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ!",
            reply_markup=get_final_confirmation_keyboard()
        )
    
    await state.set_state(RegistrationStates.final_confirmation)
    await callback.answer()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫–ª–∞—Å—Å–∞–º" (–∏–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è)
@start_router.callback_query(F.data == "back_to_class_info")
async def back_to_class_info(callback: CallbackQuery, state: FSMContext):
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –∫–ª–∞—Å—Å–µ
    data = await state.get_data()
    class_type = data.get('class_type')
    
    # –£–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    try:
        await callback.message.edit_reply_markup(reply_markup=None)
    except:
        pass
    
    # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –≤–æ–∑–≤—Ä–∞—Ç–æ–º
    await asyncio.sleep(MESSAGE_DELAY)
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π callback —Å –Ω—É–∂–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –≤—ã–∑–æ–≤–∞ choose_class
    class CallbackMock:
        def __init__(self, original_callback, class_type):
            self.message = original_callback.message
            self.from_user = original_callback.from_user
            self.data = f"class_{class_type}"
            self.id = original_callback.id
    
    mock_callback = CallbackMock(callback, class_type)
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–ª–∞—Å—Å–µ
    await choose_class(mock_callback, state)
    await callback.answer()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞
@start_router.callback_query(F.data == "final_confirm")
async def final_confirmation(callback: CallbackQuery, state: FSMContext):
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    character_name = data.get('character_name')
    character_class = data.get('character_class')
    class_type = data.get('class_type')
    player_gender = data.get('player_gender', 'male')  # ‚Üê –î–û–ë–ê–í–õ–ï–ù–û: –ø–æ–ª—É—á–∞–µ–º –ø–æ–ª
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    user_id = callback.from_user.id
    username = callback.from_user.username
    first_name = callback.from_user.first_name
    last_name = callback.from_user.last_name
    
    user_db_id = db.add_user(user_id, username, first_name, last_name)
    
    # –°–æ–∑–¥–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Å —É—á–µ—Ç–æ–º –ø–æ–ª–∞ ‚Üê –ò–ó–ú–ï–ù–ï–ù–û: –ø–µ—Ä–µ–¥–∞–µ–º –ø–æ–ª –≤ –ë–î
    if user_db_id:
        # TODO: –û–±–Ω–æ–≤–∏—Ç—å –º–µ—Ç–æ–¥ add_player –≤ Database –¥–ª—è –ø—Ä–∏–µ–º–∞ –ø–æ–ª–∞
        player_id = db.add_player(user_db_id, character_name, character_class, player_gender)
    
    # –£–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    await callback.message.edit_reply_markup(reply_markup=None)
    
    # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ–± —É—Å–ø–µ—Ö–µ
    await asyncio.sleep(MESSAGE_DELAY)
    
    # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    image_path = "images/registration_success.jpg"
    if not os.path.exists(image_path):
        image_path = "images/placeholder.jpg"
    
    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π "–ù–∞—á–∞—Ç—å –∏–≥—Ä–∞—Ç—å"
    from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
    start_keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üéÆ –ù–∞—á–∞—Ç—å –∏–≥—Ä–∞—Ç—å", callback_data="start_tutorial")]
    ])
    
    try:
        photo = FSInputFile(image_path)
        await callback.message.answer_photo(
            photo=photo,
            caption=f"üéâ –ü–µ—Ä—Å–æ–Ω–∞–∂ —Å–æ–∑–¥–∞–Ω!\n\n"
                   f"üìõ **–ò–º—è:** {character_name}\n"
                   f"üéØ **–ö–ª–∞—Å—Å:** {character_class}\n\n"
                   f"–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä–∞—Ç—å –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:",
            reply_markup=start_keyboard
        )
    except Exception as e:
        await callback.message.answer(
            f"üéâ –ü–µ—Ä—Å–æ–Ω–∞–∂ —Å–æ–∑–¥–∞–Ω!\n\n"
            f"üìõ **–ò–º—è:** {character_name}\n"
            f"üéØ **–ö–ª–∞—Å—Å:** {character_class}\n\n"
            f"–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä–∞—Ç—å –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:",
            reply_markup=start_keyboard
        )
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()
    await callback.answer()

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏–≥—Ä–∞—Ç—å"
# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏–≥—Ä–∞—Ç—å" - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
@start_router.callback_query(F.data == "continue_playing")
async def continue_playing(callback: CallbackQuery, state: FSMContext):
    """–ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –∏–≥—Ä—ã —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–º"""
    user_id = callback.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    active_player = db.get_active_player(user_id)
    if not active_player:
        await callback.answer("‚ùå –û—à–∏–±–∫–∞: –ø–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    player_id = active_player[0]
    player_name = active_player[2]
    
    # –£–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    try:
        await callback.message.edit_reply_markup(reply_markup=None)
    except:
        pass
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è
    tutorial_progress = tutorial_db.get_tutorial_progress(player_id)
    
    if tutorial_progress:
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—É—á–µ–Ω–∏–µ —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —à–∞–≥–∞
        current_step = tutorial_progress[0]  # current_step
        player_balance = tutorial_progress[3]  # player_balance
        
        print(f"üîÑ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å: {current_step}, –±–∞–ª–∞–Ω—Å: {player_balance}")
        
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await state.update_data(player_id=player_id, player_balance=player_balance)
        
        # –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ —à–∞–≥–∞ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —ç—Ç–∞–ø
        if current_step == "waiting_for_belt_start":
            await state.set_state(TutorialStates.waiting_for_belt_start)
            from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üîß –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤", callback_data="belt_prepare_materials")]
            ])
            await callback.message.answer(
                f"üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {player_name}!\n–ü—Ä–æ–¥–æ–ª–∂–∏–º –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–º–Ω—è.",
                reply_markup=keyboard
            )
            
        elif current_step == "in_shop_menu":
            # –ï—Å–ª–∏ –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ –º–∞–≥–∞–∑–∏–Ω–µ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –º–∞–≥–∞–∑–∏–Ω–∞
            await state.set_state(TutorialStates.in_shop_menu)
            from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üõí –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–∞–≥–∞–∑–∏–Ω", callback_data="view_showcase")]
            ])
            await callback.message.answer(
                f"üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {player_name}!\n–í—ã –Ω–∞—Ö–æ–¥–∏–ª–∏—Å—å –≤ –º–∞–≥–∞–∑–∏–Ω–µ.",
                reply_markup=keyboard
            )
            
        elif current_step == "waiting_for_exit":
            # –ï—Å–ª–∏ —Ç–æ–ª—å–∫–æ —á—Ç–æ –≤—ã—à–ª–∏ –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞
            await state.set_state(TutorialStates.waiting_for_exit)
            from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üî® –°–¥–µ–ª–∞—Ç—å —Ä–µ–º–µ–Ω—å", callback_data="make_belt")]
            ])
            await callback.message.answer(
                f"üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {player_name}!\n–í—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –≤—ã—à–ª–∏ –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞.",
                reply_markup=keyboard
            )
            
        else:
            # –î–ª—è –¥—Ä—É–≥–∏—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–π –Ω–∞—á–∏–Ω–∞–µ–º —Å –Ω–∞—á–∞–ª–∞ –∫—Ä–∞—Ñ—Ç–∞
            await state.set_state(TutorialStates.waiting_for_belt_start)
            from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üîß –ù–∞—á–∞—Ç—å –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–º–Ω—è", callback_data="belt_prepare_materials")]
            ])
            await callback.message.answer(
                f"üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {player_name}!\n–ü—Ä–æ–¥–æ–ª–∂–∏–º –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–º–Ω—è.",
                reply_markup=keyboard
            )
    else:
        # –ù–∞—á–∏–Ω–∞–µ–º –æ–±—É—á–µ–Ω–∏–µ –∑–∞–Ω–æ–≤–æ
        await start_tutorial_handler(callback, state)
    
    await callback.answer()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ"
@start_router.callback_query(F.data == "create_new_character")
async def create_new_character(callback: CallbackQuery, state: FSMContext):
    user_id = callback.from_user.id
    active_player = db.get_active_player(user_id)
    
    if not active_player:
        await start_new_character_creation(callback, state)
        return
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ
    await show_new_character_confirmation(callback, active_player, state)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ
@start_router.callback_query(F.data == "confirm_new_character")
async def confirm_new_character(callback: CallbackQuery, state: FSMContext):
    data = await state.get_data()
    old_player_id = data.get('old_player_id')
    
    if old_player_id:
        db.deactivate_player(old_player_id)
        tutorial_db.clear_tutorial_data(old_player_id)
    
    await callback.message.edit_reply_markup(reply_markup=None)
    await start_new_character_creation(callback, state)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–º–µ–Ω—ã —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ
@start_router.callback_query(F.data == "cancel_new_character")  
async def cancel_new_character(callback: CallbackQuery, state: FSMContext):
    await callback.message.edit_reply_markup(reply_markup=None)
    await callback.message.answer("–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ", reply_markup=get_existing_players_keyboard())
    await state.clear()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ—Ñ–∏–ª—å"
@start_router.callback_query(F.data == "view_profile")
async def view_profile(callback: CallbackQuery, state: FSMContext):
    """–ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ—Ñ–∏–ª—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"""
    user_id = callback.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    active_player = db.get_active_player(user_id)
    if not active_player:
        await callback.answer("‚ùå –û—à–∏–±–∫–∞: –ø–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    player_id = active_player[0]
    player_name = active_player[2]
    player_class = active_player[3]
    level = active_player[4]
    mastery = active_player[5]
    luck = active_player[6] 
    marketing = active_player[7]
    reputation = active_player[8]
    coins = active_player[9]
    gender = active_player[11] if len(active_player) > 11 else "male"
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
    gender_emoji = "üë®" if gender == "male" else "üë©"
    profile_text = (
        f"{gender_emoji} **–ü—Ä–æ—Ñ–∏–ª—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞**\n\n"
        f"üìõ **–ò–º—è:** {player_name}\n"
        f"üéØ **–ö–ª–∞—Å—Å:** {player_class}\n"
        f"‚≠ê **–£—Ä–æ–≤–µ–Ω—å:** {level}\n\n"
        f"üìä **–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:**\n"
        f"‚Ä¢ üõ†Ô∏è –ú–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ: {mastery}\n"
        f"‚Ä¢ üçÄ –£–¥–∞—á–∞: {luck}\n"
        f"‚Ä¢ üìà –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥: {marketing}\n"
        f"‚Ä¢ üí´ –†–µ–ø—É—Ç–∞—Ü–∏—è: {reputation}\n\n"
        f"üí∞ **–ë–∞–ª–∞–Ω—Å:** {coins} –º–æ–Ω–µ—Ç"
    )
    
    # –£–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    await callback.message.edit_reply_markup(reply_markup=None)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    image_path = "images/profile.jpg"
    if not os.path.exists(image_path):
        image_path = "images/placeholder.jpg"
    
    try:
        photo = FSInputFile(image_path)
        await callback.message.answer_photo(
            photo=photo,
            caption=profile_text,
            reply_markup=get_profile_management_keyboard()
        )
    except Exception as e:
        await callback.message.answer(
            profile_text,
            reply_markup=get_profile_management_keyboard()
        )
    
    await state.set_state(PlayerManagementStates.viewing_profile)
    await callback.answer()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–£–¥–∞–ª–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞" –≤ –ø—Ä–æ—Ñ–∏–ª–µ
@start_router.callback_query(F.data == "delete_character")
async def delete_character(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"""
    user_id = callback.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    active_player = db.get_active_player(user_id)
    if not active_player:
        await callback.answer("‚ùå –û—à–∏–±–∫–∞: –ø–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    player_name = active_player[2]
    
    # –£–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    await callback.message.edit_reply_markup(reply_markup=None)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è
    image_path = "images/delete_confirmation.jpg"
    if not os.path.exists(image_path):
        image_path = "images/placeholder.jpg"
    
    try:
        photo = FSInputFile(image_path)
        await callback.message.answer_photo(
            photo=photo,
            caption=f"‚ö†Ô∏è **–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è**\n\n"
                   f"–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ **{player_name}**?\n\n"
                   f"‚ùóÔ∏è –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å! –í—Å–µ –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ –ø—Ä–µ–¥–º–µ—Ç—ã –±—É–¥—É—Ç –ø–æ—Ç–µ—Ä—è–Ω—ã.",
            reply_markup=get_deletion_confirmation_keyboard()
        )
    except Exception as e:
        await callback.message.answer(
            f"‚ö†Ô∏è **–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è**\n\n"
            f"–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ **{player_name}**?\n\n"
            f"‚ùóÔ∏è –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å! –í—Å–µ –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ –ø—Ä–µ–¥–º–µ—Ç—ã –±—É–¥—É—Ç –ø–æ—Ç–µ—Ä—è–Ω—ã.",
            reply_markup=get_deletion_confirmation_keyboard()
        )
    
    await state.set_state(PlayerManagementStates.confirming_deletion)
    await callback.answer()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è
@start_router.callback_query(F.data == "confirm_deletion")
async def confirm_deletion(callback: CallbackQuery, state: FSMContext):
    """–§–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è"""
    user_id = callback.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    active_player = db.get_active_player(user_id)
    if not active_player:
        await callback.answer("‚ùå –û—à–∏–±–∫–∞: –ø–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    player_name = active_player[2]
    
    # –£–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    await callback.message.edit_reply_markup(reply_markup=None)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    image_path = "images/final_delete.jpg"
    if not os.path.exists(image_path):
        image_path = "images/placeholder.jpg"
    
    try:
        photo = FSInputFile(image_path)
        await callback.message.answer_photo(
            photo=photo,
            caption=f"üö® **–§–ò–ù–ê–õ–¨–ù–û–ï –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ï**\n\n"
                   f"–í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –£–î–ê–õ–ò–¢–¨ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ **{player_name}** –Ω–∞–≤—Å–µ–≥–¥–∞!\n\n"
                   f"‚ùå –í—Å–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –±–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ —É–¥–∞–ª–µ–Ω—ã\n"
                   f"‚ùå –ü—Ä–æ–≥—Ä–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è –±—É–¥–µ—Ç —Å–±—Ä–æ—à–µ–Ω\n"
                   f"‚ùå –ü—Ä–µ–¥–º–µ—Ç—ã –∏ –º–æ–Ω–µ—Ç—ã –±—É–¥—É—Ç –ø–æ—Ç–µ—Ä—è–Ω—ã\n\n"
                   f"–í—ã —É–≤–µ—Ä–µ–Ω—ã?",
            reply_markup=get_final_deletion_keyboard()
        )
    except Exception as e:
        await callback.message.answer(
            f"üö® **–§–ò–ù–ê–õ–¨–ù–û–ï –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ï**\n\n"
            f"–í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –£–î–ê–õ–ò–¢–¨ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ **{player_name}** –Ω–∞–≤—Å–µ–≥–¥–∞!\n\n"
            f"‚ùå –í—Å–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –±–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ —É–¥–∞–ª–µ–Ω—ã\n"
            f"‚ùå –ü—Ä–æ–≥—Ä–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è –±—É–¥–µ—Ç —Å–±—Ä–æ—à–µ–Ω\n"
            f"‚ùå –ü—Ä–µ–¥–º–µ—Ç—ã –∏ –º–æ–Ω–µ—Ç—ã –±—É–¥—É—Ç –ø–æ—Ç–µ—Ä—è–Ω—ã\n\n"
            f"–í—ã —É–≤–µ—Ä–µ–Ω—ã?",
            reply_markup=get_final_deletion_keyboard()
        )
    
    await callback.answer()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è
@start_router.callback_query(F.data == "final_confirm_deletion")
async def final_confirm_deletion(callback: CallbackQuery, state: FSMContext):
    """–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"""
    user_id = callback.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    active_player = db.get_active_player(user_id)
    if not active_player:
        await callback.answer("‚ùå –û—à–∏–±–∫–∞: –ø–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    player_id = active_player[0]
    player_name = active_player[2]
    
    # –£–¥–∞–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ–±—É—á–µ–Ω–∏—è
    tutorial_db.clear_tutorial_data(player_id)
    
    # –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    db.deactivate_player(player_id)
    
    # –£–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    await callback.message.edit_reply_markup(reply_markup=None)
    
    # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —É–¥–∞–ª–µ–Ω–∏–∏
    image_path = "images/deletion_success.jpg"
    if not os.path.exists(image_path):
        image_path = "images/placeholder.jpg"
    
    try:
        photo = FSInputFile(image_path)
        await callback.message.answer_photo(
            photo=photo,
            caption=f"üóëÔ∏è –ü–µ—Ä—Å–æ–Ω–∞–∂ **{player_name}** –±—ã–ª —É–¥–∞–ª–µ–Ω.\n\n"
                   f"–í—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –±—ã–ª–∏ –±–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ —É–¥–∞–ª–µ–Ω—ã.",
            reply_markup=get_registration_keyboard()
        )
    except Exception as e:
        await callback.message.answer(
            f"üóëÔ∏è –ü–µ—Ä—Å–æ–Ω–∞–∂ **{player_name}** –±—ã–ª —É–¥–∞–ª–µ–Ω.\n\n"
            f"–í—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –±—ã–ª–∏ –±–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ —É–¥–∞–ª–µ–Ω—ã.",
            reply_markup=get_registration_keyboard()
        )
    
    await state.clear()
    await callback.answer()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–º–µ–Ω—ã —É–¥–∞–ª–µ–Ω–∏—è
@start_router.callback_query(F.data == "cancel_deletion")
async def cancel_deletion(callback: CallbackQuery, state: FSMContext):
    """–û—Ç–º–µ–Ω–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"""
    await callback.message.edit_reply_markup(reply_markup=None)
    await callback.answer("‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
    await state.clear()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–º–µ–Ω—ã —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è  
@start_router.callback_query(F.data == "cancel_final_deletion")
async def cancel_final_deletion(callback: CallbackQuery, state: FSMContext):
    """–û—Ç–º–µ–Ω–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è"""
    await callback.message.edit_reply_markup(reply_markup=None)
    await callback.answer("‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
    await state.clear()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ" - –ü–†–û–°–¢–û–ô –ò –ü–û–ù–Ø–¢–ù–´–ô
@start_router.callback_query(F.data == "create_new_character")
async def create_new_character(callback: CallbackQuery, state: FSMContext):
    """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º"""
    user_id = callback.from_user.id
    active_player = db.get_active_player(user_id)
    
    if not active_player:
        await start_new_character_creation(callback, state)
        return
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ
    await show_new_character_confirmation(callback, active_player, state)

# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è - –ø–æ–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
async def show_new_character_confirmation(callback: CallbackQuery, active_player: tuple, state: FSMContext):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"""
    player_name = active_player[2]
    player_class = active_player[3]
    player_level = active_player[4]
    
    await callback.answer()
    
    # –£–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    try:
        await callback.message.edit_reply_markup(reply_markup=None)
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∫–Ω–æ–ø–∫–∏: {e}")
    
    await asyncio.sleep(MESSAGE_DELAY)
    
    # –¢–µ–∫—Å—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    confirmation_text = (
        f"‚ö†Ô∏è **–ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ï –°–û–ó–î–ê–ù–ò–Ø –ù–û–í–û–ì–û –ü–ï–†–°–û–ù–ê–ñ–ê**\n\n"
        f"–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂:\n"
        f"üìõ **{player_name}**\n"
        f"üéØ **{player_class}** (–£—Ä–æ–≤–µ–Ω—å {player_level})\n\n"
        f"üö® **–í–ù–ò–ú–ê–ù–ò–ï!**\n"
        f"–ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:\n"
        f"‚Ä¢ –¢–µ–∫—É—â–∏–π –ø–µ—Ä—Å–æ–Ω–∞–∂ –±—É–¥–µ—Ç –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω\n"
        f"‚Ä¢ –í–µ—Å—å –ø—Ä–æ–≥—Ä–µ—Å—Å –±—É–¥–µ—Ç –ø–æ—Ç–µ—Ä—è–Ω\n"
        f"‚Ä¢ –ü—Ä–µ–¥–º–µ—Ç—ã –∏ –º–æ–Ω–µ—Ç—ã –±—É–¥—É—Ç —Å–±—Ä–æ—à–µ–Ω—ã\n"
        f"‚Ä¢ –î–∞–Ω–Ω—ã–µ –æ–±—É—á–µ–Ω–∏—è —É–¥–∞–ª—è—Ç—Å—è\n"
        f"‚Ä¢ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ!\n\n"
        f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å?"
    )
    
    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
    confirmation_keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å –∏ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ", callback_data="confirm_new_character")],
        [InlineKeyboardButton(text="‚ùå –ù–µ—Ç, –æ—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–∫—É—â–µ–≥–æ", callback_data="cancel_new_character")]
    ])
    
    image_path = "images/delete_warning.jpg"
    if not os.path.exists(image_path):
        image_path = "images/placeholder.jpg"
    
    try:
        photo = FSInputFile(image_path)
        await callback.message.answer_photo(
            photo=photo,
            caption=confirmation_text,
            reply_markup=confirmation_keyboard
        )
    except Exception as e:
        await callback.message.answer(
            confirmation_text,
            reply_markup=confirmation_keyboard
        )
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å—Ç–∞—Ä–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    await state.update_data(old_player_id=active_player[0])

# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è - –Ω–∞—á–∞–ª–æ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
async def start_new_character_creation(callback: CallbackQuery, state: FSMContext):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"""
    await asyncio.sleep(MESSAGE_DELAY)
    
    image_path = "images/create_character.jpg"
    if not os.path.exists(image_path):
        image_path = "images/placeholder.jpg"
    
    try:
        photo = FSInputFile(image_path)
        await callback.message.answer_photo(
            photo=photo,
            caption="üé≠ –û—Ç–ª–∏—á–Ω–æ! –î–∞–≤–∞–π —Å–æ–∑–¥–∞–¥–∏–º —Ç–≤–æ–µ–≥–æ –Ω–æ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞!\n\n"
                   "–ö–∞–∫ –∑–æ–≤—É—Ç —Ç–≤–æ–µ–≥–æ –±—É–¥—É—â–µ–≥–æ –∫–æ–∂–µ–≤–Ω–∏–∫–∞?\n"
                   "(–í—ã–±–µ—Ä–∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è –æ—Ç 2 –¥–æ 20 —Å–∏–º–≤–æ–ª–æ–≤)",
        )
    except Exception as e:
        await callback.message.answer(
            "üé≠ –û—Ç–ª–∏—á–Ω–æ! –î–∞–≤–∞–π —Å–æ–∑–¥–∞–¥–∏–º —Ç–≤–æ–µ–≥–æ –Ω–æ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞!\n\n"
            "–ö–∞–∫ –∑–æ–≤—É—Ç —Ç–≤–æ–µ–≥–æ –±—É–¥—É—â–µ–≥–æ –∫–æ–∂–µ–≤–Ω–∏–∫–∞?\n"
            "(–í—ã–±–µ—Ä–∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è –æ—Ç 2 –¥–æ 20 —Å–∏–º–≤–æ–ª–æ–≤)",
        )
    
    await state.set_state(RegistrationStates.waiting_for_name)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ
@start_router.callback_query(F.data == "confirm_new_character")
async def confirm_new_character(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"""
    data = await state.get_data()
    old_player_id = data.get('old_player_id')
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    if old_player_id:
        db.deactivate_player(old_player_id)
        tutorial_db.clear_tutorial_data(old_player_id)
        print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω —Å—Ç–∞—Ä—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂: {old_player_id}")
    
    # –£–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    try:
        await callback.message.edit_reply_markup(reply_markup=None)
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∫–Ω–æ–ø–∫–∏: {e}")
    
    await callback.answer("‚úÖ –ù–∞—á–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞!")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ
    await start_new_character_creation(callback, state)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–º–µ–Ω—ã —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ  
@start_router.callback_query(F.data == "cancel_new_character")
async def cancel_new_character(callback: CallbackQuery, state: FSMContext):
    """–û—Ç–º–µ–Ω–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"""
    # –£–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    try:
        await callback.message.edit_reply_markup(reply_markup=None)
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∫–Ω–æ–ø–∫–∏: {e}")
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()
    
    await callback.answer("‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ")
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ –≤—ã–±–æ—Ä—É –¥–µ–π—Å—Ç–≤–∏–π
    await asyncio.sleep(MESSAGE_DELAY)
    await callback.message.answer(
        "–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?",
        reply_markup=get_existing_players_keyboard()
    )

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –æ–±—É—á–µ–Ω–∏—è
async def start_tutorial(callback: CallbackQuery, state: FSMContext):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –æ–±—É—á–µ–Ω–∏–µ –¥–ª—è –Ω–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞"""
    user_id = callback.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    active_player = db.get_active_player(user_id)
    if not active_player:
        await callback.answer("‚ùå –û—à–∏–±–∫–∞: –ø–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    player_id = active_player[0]  # ID –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    player_name = active_player[2]  # –∏–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    player_class = active_player[3]  # –∫–ª–∞—Å—Å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è –¥–ª—è —ç—Ç–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    tutorial_db.init_tutorial_progress(player_id)
    tutorial_db.init_shop_items()
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏—é –ø–æ –∫–ª–∞—Å—Å—É
    if player_class == "–†–∞–±–æ—Ç—è–≥–∞":
        backstory = f"–í—ã –ø–æ–ª –∂–∏–∑–Ω–∏ —Ç—Ä—É–¥–∏—Ç–µ—Å—å –Ω–∞ –∑–∞–≤–æ–¥–µ. –†–∞–±–æ—Ç–∞ –Ω–µ –ª–µ–≥–∫–∞—è, –Ω–æ —á–µ—Å—Ç–Ω–∞—è. –ö–∞–∂–¥—ã–π –¥–µ–Ω—å, –∫–∞–∫ —á–∞—Å—ã, —Å 8:00 –¥–æ 17:00 –≤—ã —É —Å—Ç–∞–Ω–∫–∞. –ê –ø–æ—Å–ª–µ —Å–º–µ–Ω—ã –æ—Å—Ç–∞–µ—Ç—Å—è –≤—Ä–µ–º—è –Ω–∞ —Å–µ–±—è. –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–µ—Ä–∏–∞–ª, –ø–æ–≥—É–ª—è—Ç—å –ø–æ –≥–æ—Ä–æ–¥—É —Å —Å–µ–º—å–µ–π, –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è —Å –¥—Ä—É–∑—å—è–º–∏. –û–±—ã—á–Ω–∞—è —Å–ø–æ–∫–æ–π–Ω–∞—è –∂–∏–∑–Ω—å.\n\n–û–¥–Ω–∞–∂–¥—ã –≤–µ—á–µ—Ä–æ–º, –ª–∏—Å—Ç–∞—è –ª–µ–Ω—Ç—É YouTube, –≤—ã –Ω–∞—Ç–∫–Ω—É–ª–∏—Å—å –Ω–∞ –≤–∏–¥–µ–æ, –≥–¥–µ –º–∞—Å—Ç–µ—Ä –∏–∑ –∫—É—Å–∫–∞ –∫–æ–∂–∏ –¥–µ–ª–∞–ª —Ä–µ–º–µ—à–æ–∫, –∞ –ø–æ—Ç–æ–º –∫–æ—à–µ–ª–µ–∫, –∞ –ø–æ—Ç–æ–º —Å—É–º–∫—É. –¢–∞–∫ –ª–æ–≤–∫–æ –∏ –ø—Ä–æ—Å—Ç–æ. –í–∞–º –∑–∞—Ö–æ—Ç–µ–ª–æ—Å—å —Ç–æ–∂–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–¥–µ–ª–∞—Ç—å —Å–µ–±–µ —Ä–µ–º–µ–Ω—å. –ê –µ—Å–ª–∏ –ø–æ–ª—É—á–∏—Ç—Å—è, —Ç–æ –∏ —Å—É–º–∫—É.\n\n–í–∑—è–≤ —á–∞—Å—Ç—å –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–π, –≤—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—å –≤ –±–ª–∏–∂–∞–π—à–∏–π –º–∞–≥–∞–∑–∏–Ω, –≥–¥–µ –ø—Ä–æ–¥–∞–≤–∞–ª–∏ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—É—é –∫–æ–∂—É."
        image_name = "worker_backstory.jpg"
    
    elif player_class == "–ú–µ–Ω–µ–¥–∂–µ—Ä":
        backstory = f"–í—ã –±—ã–ª–∏ –æ–±—ã—á–Ω—ã–º –æ—Ñ–∏—Å–Ω—ã–º —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–º, —á—å–∏ –¥–Ω–∏ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –≤ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã—Ö —Å–æ–≤–µ—â–∞–Ω–∏—è—Ö –∏ —Ä–∞–±–æ—Ç–µ —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏. –í—ã —á—É–≤—Å—Ç–≤–æ–≤–∞–ª–∏, –∫–∞–∫ —Ç–æ–Ω–µ—Ç–µ –≤ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–π —Ä—É—Ç–∏–Ω–µ, –≥–¥–µ –≤–∞—à–∞ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–∞ –Ω–∏–∫–æ–º—É –Ω–µ –Ω—É–∂–Ω–∞, –∞ —Ä–µ–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞–±–æ—Ç—ã —Ä–∞–∑–º—ã—Ç—ã –∏ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã. –ú–∏—Ä, —Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ —Ü–∏—Ñ—Ä –∏ –æ—Ç—á–µ—Ç–æ–≤, –∫–∞–∑–∞–ª—Å—è –≤–∞–º –ø—É—Å—Ç—ã–º –∏ –ª–∏—à–µ–Ω–Ω—ã–º —Å–º—ã—Å–ª–∞.\n\n–î–ª—è –æ—Ç–¥—ã—Ö–∞ –≤—ã —Å–º–æ—Ç—Ä–µ—Ç–µ YouTube, –∏ –æ–¥–Ω–∞–∂–¥—ã –æ–Ω –ø–æ–¥—Å—É–Ω—É–ª –≤–∞–º –∫–∞–Ω–∞–ª –∫–æ–∂–µ–≤–Ω–∏–∫–∞. –õ–æ–≤–∫–æ –∏ –ø—Ä–æ—Å—Ç–æ –º–∞—Å—Ç–µ—Ä –¥–µ–ª–∞–ª —Ä–∞–∑–Ω—ã–µ –≤–µ—â–∏. –ò —á—Ç–æ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å, —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–≤–æ–∏—Ö —Ç—Ä—É–¥–æ–≤ –º–∞—Å—Ç–µ—Ä –º–æ–≥ –ø–æ–¥–µ—Ä–∂–∞—Ç—å –≤ —Ä—É–∫–∞—Ö, –∞ —á—Ç–æ –µ—â–µ –ª—É—á—à–µ ‚Äì –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∏–º –∫–∞–∂–¥—ã–π –¥–µ–Ω—å! –¢–æ–≥–¥–∞ –≤—ã —Ä–µ—à–∏–ª –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –∏ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ, —á—Ç–æ-—Ç–æ —Å–¥–µ–ª–∞—Ç—å —É —Å–µ–±—è –Ω–∞ –∫—É—Ö–Ω–µ.\n\n–í–∑—è–≤ —á–∞—Å—Ç—å –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–π, –≤—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—å –≤ –±–ª–∏–∂–∞–π—à–∏–π –º–∞–≥–∞–∑–∏–Ω, –≥–¥–µ –ø—Ä–æ–¥–∞–≤–∞–ª–∏ –∫–æ–∂—É."
        image_name = "manager_backstory.jpg"
    
    else:  # –ë–ª–æ–≥–≥–µ—Ä
        backstory = f"–í—ã –∫–æ–≥–¥–∞-—Ç–æ –±—ã–ª–∏ –∏–∑–≤–µ—Å—Ç–Ω—ã–º –±–ª–æ–≥–µ—Ä–æ–º —Å —Ç—ã—Å—è—á–∞–º–∏ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤, —Å—Ç—Ä–æ—è —Å–≤–æ—é –∂–∏–∑–Ω—å –Ω–∞ –ª–∞–π–∫–∞—Ö –∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –∞—É–¥–∏—Ç–æ—Ä–∏–∏. –û–¥–Ω–∞–∫–æ –Ω–µ—É–¥–∞—á–Ω–æ–µ –≤–ª–æ–∂–µ–Ω–∏–µ –≤ —Å—Ç–∞—Ä—Ç–∞–ø –æ–±–µ—Ä–Ω—É–ª—Å—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–º –∫—Ä–∞—Ö–æ–º –∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–æ–π –≤—Å–µ—Ö –≤–∞—à–∏—Ö —Å–æ—Ü—Å–µ—Ç–µ–π. –í –æ–¥–Ω–æ—á–∞—Å—å–µ –≤—ã –ø–æ—Ç–µ—Ä—è–ª–∏ –≤—Å—ë, —á—Ç–æ —Å—á–∏—Ç–∞–ª–∏ —Å–≤–æ–µ–π –∂–∏–∑–Ω—å—é, –æ—Å–æ–∑–Ω–∞–≤ —à–∞—Ç–∫–æ—Å—Ç—å –º–∏—Ä–∞, –ø–æ—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ –Ω–∞ —á—É–∂–∏—Ö –æ—Ü–µ–Ω–∫–∞—Ö.\n\n–í –ø–æ–∏—Å–∫–∞—Ö –Ω–æ–≤–æ–≥–æ –ø—É—Ç–∏ –≤—ã –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏ –Ω–∞ YouTube —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –º–∞—Å—Ç–µ—Ä–æ–≤-—Ä–µ–º–µ—Å–ª–µ–Ω–Ω–∏–∫–æ–≤. –ò—Ö –∫—Ä–æ–ø–æ—Ç–ª–∏–≤–∞—è —Ä–∞–±–æ—Ç–∞ —Å –∫–æ–∂–µ–π, —Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞—Å—Å–Ω—ã—Ö –≤–µ—â–µ–π, –ø–æ—Ä–∞–∑–∏–ª–∞ –≤–∞—Å. –≠—Ç–æ –±—ã–ª —à–∞–Ω—Å –Ω–∞—á–∞—Ç—å –≤—Å—ë —Å —á–∏—Å—Ç–æ–≥–æ –ª–∏—Å—Ç–∞ –∏ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –Ω–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π, –∞ —Ä–µ–∞–ª—å–Ω—ã–π, –æ—Å—è–∑–∞–µ–º—ã–π –±–∏–∑–Ω–µ—Å.\n\n–í–∑—è–≤ —á–∞—Å—Ç—å –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–π, –≤—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—å –≤ –±–ª–∏–∂–∞–π—à–∏–π –º–∞–≥–∞–∑–∏–Ω, –≥–¥–µ –ø—Ä–æ–¥–∞–≤–∞–ª–∏ –∫–æ–∂—É."
        image_name = "blogger_backstory.jpg"
    
    # –£–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    await callback.message.edit_reply_markup(reply_markup=None)
    
    # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É –ø—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏–∏
    image_path = f"images/tutorial/{image_name}"
    if not os.path.exists(image_path):
        image_path = "images/placeholder.jpg"
    
    try:
        photo = FSInputFile(image_path)
        await callback.message.answer_photo(
            photo=photo,
            caption=backstory,
            reply_markup=get_tutorial_start_keyboard()
        )
    except Exception as e:
        await callback.message.answer(
            backstory,
            reply_markup=get_tutorial_start_keyboard()
        )
    
    await state.set_state(TutorialStates.waiting_for_shop_enter)
    await state.update_data(player_id=player_id)
    await callback.answer()
    
# –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é (—Ä–µ–∞–ª–∏–∑—É–µ–º –ø–æ–∑–∂–µ)
@start_router.callback_query(F.data == "work_menu")
async def work_menu(callback: CallbackQuery):
    await callback.answer("üõ†Ô∏è –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç—ã —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞!")

@start_router.callback_query(F.data == "orders_menu")
async def orders_menu(callback: CallbackQuery):
    await callback.answer("üìã –°–∏—Å—Ç–µ–º–∞ –∑–∞–∫–∞–∑–æ–≤ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞!")

@start_router.callback_query(F.data == "settings")
async def settings(callback: CallbackQuery):
    await callback.answer("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∫–æ—Ä–æ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã!")

async def return_to_last_step(callback: CallbackQuery, state: FSMContext, player_id, current_step, player_balance):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–≥—Ä–æ–∫–∞ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥ –æ–±—É—á–µ–Ω–∏—è"""
    user_id = callback.from_user.id
    active_player = db.get_active_player(user_id)
    player_name = active_player[2] if active_player else "–ò–≥—Ä–æ–∫"
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.update_data(player_id=player_id, player_balance=player_balance)
    
    # –û–¢–ü–†–ê–í–õ–Ø–ï–ú –ù–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï –í–ú–ï–°–¢–û –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–Ø –°–¢–ê–†–û–ì–û
    if current_step == "waiting_for_shop_enter":
        await state.set_state(TutorialStates.waiting_for_shop_enter)
        tutorial_db.update_tutorial_progress(player_id, "waiting_for_shop_enter")
        
        image_path = "images/tutorial/return.jpg"
        if not os.path.exists(image_path):
            image_path = "images/placeholder.jpg"
        
        try:
            photo = FSInputFile(image_path)
            await callback.message.answer_photo(
                photo=photo,
                caption=f"üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {player_name}!\n\n–ü—Ä–æ–¥–æ–ª–∂–∏–º —Å —Ç–æ–≥–æ –º–µ—Å—Ç–∞, –≥–¥–µ —Ç—ã –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è.",
                reply_markup=get_tutorial_start_keyboard()
            )
        except:
            await callback.message.answer(
                f"üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {player_name}!\n\n–ü—Ä–æ–¥–æ–ª–∂–∏–º —Å —Ç–æ–≥–æ –º–µ—Å—Ç–∞, –≥–¥–µ —Ç—ã –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è.",
                reply_markup=get_tutorial_start_keyboard()
            )
    
    elif current_step == "waiting_for_approach":
        await state.set_state(TutorialStates.waiting_for_approach)
        tutorial_db.update_tutorial_progress(player_id, "waiting_for_approach")
        
        image_path = "images/tutorial/shop_entrance.jpg"
        if not os.path.exists(image_path):
            image_path = "images/placeholder.jpg"
        
        try:
            photo = FSInputFile(image_path)
            await callback.message.answer_photo(
                photo=photo,
                caption=f"üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º –≤ –º–∞–≥–∞–∑–∏–Ω, {player_name}!\n\n–¢—ã –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –∫–æ–≥–¥–∞ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–ª –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã.",
                reply_markup=get_approach_keyboard()
            )
        except:
            await callback.message.answer(
                f"üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º –≤ –º–∞–≥–∞–∑–∏–Ω, {player_name}!\n\n–¢—ã –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –∫–æ–≥–¥–∞ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–ª –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã.",
                reply_markup=get_approach_keyboard()
            )
    
    elif current_step == "waiting_for_oldman_approach":
        await state.set_state(TutorialStates.waiting_for_oldman_approach)
        tutorial_db.update_tutorial_progress(player_id, "waiting_for_oldman_approach")
        
        image_path = "images/tutorial/oldman_talking.jpg"
        if not os.path.exists(image_path):
            image_path = "images/placeholder.jpg"
        
        try:
            photo = FSInputFile(image_path)
            await callback.message.answer_photo(
                photo=photo,
                caption=f"üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {player_name}!\n\n–¢—ã –∫–∞–∫ —Ä–∞–∑ –ø–æ–¥–æ—à–µ–ª –ø–æ—Å–ª—É—à–∞—Ç—å –ì–µ–Ω—É.",
                reply_markup=get_oldman_approach_keyboard()
            )
        except:
            await callback.message.answer(
                f"üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {player_name}!\n\n–¢—ã –∫–∞–∫ —Ä–∞–∑ –ø–æ–¥–æ—à–µ–ª –ø–æ—Å–ª—É—à–∞—Ç—å –ì–µ–Ω—É.",
                reply_markup=get_oldman_approach_keyboard()
            )
    
    elif current_step == "waiting_for_showcase":
        await state.set_state(TutorialStates.waiting_for_showcase)
        tutorial_db.update_tutorial_progress(player_id, "waiting_for_showcase")
        
        image_path = "images/tutorial/shop_showcase.jpg"
        if not os.path.exists(image_path):
            image_path = "images/placeholder.jpg"
        
        try:
            photo = FSInputFile(image_path)
            await callback.message.answer_photo(
                photo=photo,
                caption=f"üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {player_name}!\n\n–ì–µ–Ω–∞ –∫–∞–∫ —Ä–∞–∑ –ø—Ä–µ–¥–ª–∞–≥–∞–ª –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –≤–∏—Ç—Ä–∏–Ω—É.",
                reply_markup=get_showcase_keyboard()
            )
        except:
            await callback.message.answer(
                f"üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {player_name}!\n\n–ì–µ–Ω–∞ –∫–∞–∫ —Ä–∞–∑ –ø—Ä–µ–¥–ª–∞–≥–∞–ª –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –≤–∏—Ç—Ä–∏–Ω—É.",
                reply_markup=get_showcase_keyboard()
            )
    
    elif current_step in ["in_shop_menu", "in_shop_category", "waiting_for_exit"]:
        await state.set_state(TutorialStates.in_shop_menu)
        tutorial_db.update_tutorial_progress(player_id, "in_shop_menu")
        
        image_path = "images/tutorial/tools_showcase.jpg"
        if not os.path.exists(image_path):
            image_path = "images/placeholder.jpg"
        
        try:
            photo = FSInputFile(image_path)
            await callback.message.answer_photo(
                photo=photo,
                caption=f"üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º –≤ –º–∞–≥–∞–∑–∏–Ω, {player_name}!\n\nüí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: {player_balance} –º–æ–Ω–µ—Ç\n–ü—Ä–æ–¥–æ–ª–∂–∏ –ø–æ–∫—É–ø–∫–∏:",
                reply_markup=get_shop_menu_keyboard(player_balance)
            )
        except:
            await callback.message.answer(
                f"üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º –≤ –º–∞–≥–∞–∑–∏–Ω, {player_name}!\n\nüí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: {player_balance} –º–æ–Ω–µ—Ç\n–ü—Ä–æ–¥–æ–ª–∂–∏ –ø–æ–∫—É–ø–∫–∏:",
                reply_markup=get_shop_menu_keyboard(player_balance)
            )
 
    
    else:
        await start_tutorial(callback, state)
